<?xml version="1.0"?>

<!--
    this is a template configuration file
    please rename this template to "config.xml" if you want to use it
    for the client
-->
<config version="1.000">

    <!--
        in this section general options are configured
    -->
    <general>

        <!--
            the settings for the logfile
            file - absolute path to the logfile
            level - valid log levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
        -->
        <log
            file="/absolute/path/to/logfile.log"
            level="INFO" />

        <!--
            the settings for the server
            host - location/address of the server
            port - port that is used by the server
        -->
        <server
            host="server.h4des.org"
            port="12345" />

        <!--
            The settings used for the TLS/SSL connection.
            enabled - Sets if TLS/SSL is used for connections.
                Only disable it for testing purposes and NEVER in a production environment. Has to be set to the same value on each AlertR instance.
        -->
        <ssl
            enabled="True">

            <!--
                The settings for server certificates. Only used if TLS/SSL is enabled.
                caFile - path to the CA file to check the correctness of the used TLS/SSL connection
            -->
            <server
                caFile="/absolute/path/to/server_CA.pem" />

            <!--
                The settings for a client certificate. Only used if TLS/SSL is enabled.
                certificateRequired - sets if it is required for the client
                    to authenticate itself via a certificate or not
                    (if you have the alert system reachable from the internet
                    you should use client certificates)
                    ("True" or "False")
                certFile - path to the certificate file of the client
                    this is used for the TLS/SSL connection
                    (only processed if "certificateRequired" is set to "True")
                keyFile - path to the key file of the client that is used
                    for the TLS/SSL connection
                    (only processed if "certificateRequired" is set to "True")
            -->
            <client
                certificateRequired="True"
                certFile="/absolute/path/to/client.crt"
                keyFile="/absolute/path/to/client.key" />
        </ssl>

        <!--
            user credentials of this client
            (WARNING: have to be unique for each client or strange
            behavior will happen)
            username - the username
            password - the password (thanks cpt obvious ...)
        -->
        <credentials
            username="user"
            password="pass" />

        <!--
            Connection settings.
            persistent - Flag that indicates if this client is considered
                to have a persistant connection to the server. This means
                that if this client disconnects from the server, the server
                will consider this as a fail state and will invoke an alarm.
                ("True" or "False")
        -->
        <connection
            persistent="True" />

    </general>


    <!--
        in this section options for email alerts are configured
    -->
    <smtp>

        <!--
            the general settings of the email notifications
            activated - are email alerts active? ("True" or "False")
            fromAddr - email address from which this email should be sent
            toAddr - email address to which the email should be sent
        -->
        <general
            activated="True"
            fromAddr="alertSystem@h4des.org"
            toAddr="youraddress@somehost.de" />

        <!--
            the server settings of the email notifications
            host - address of the used smtp server
                (only 127.0.0.1 supported at the moment)
            port - port of the used smtp server
        -->
        <server
            host="127.0.0.1"
            port="25" />

    </smtp>


    <!--
        in this section the options of the update process are configured
    -->
    <update>

        <!--
            the server settings of the update process (only change these
                settings if you want to use your own repository and not
                the AlertR master repository on github)
            url - URL to AlertR repository
                NOTE: the update process uses HTTPS and does not allow HTTP
        -->
        <server
            url="https://raw.githubusercontent.com/sqall01/alertR/master/" />

    </update>


    <!--
        section of all alerts that could be triggered
    -->
    <alerts>

        <!--
            a single alert is configured in an "alert" element
            if you need additional alerts just add a new one
        -->
        <alert>

            <!--
                the general configuration of an alert
                id - local id of this alert (has to be unique on this client)
                description - description of this alert
            -->
            <general
                id="0"
                description="first template alert" />

            <!--
                the alert level of the current configured alert
                (an alert must have one but can have multiple alert levels)
            -->
            <alertLevel>1</alertLevel>

            <!--
                Raspberry Pi GPIO specific settings for the alert.
                gpioPin - Raspberry Pi GPIO pin that is used by this alert
                    NOTE: python uses the actual pin number and not
                    the GPIO number
                gpioPinStateNormal - The state that the gpio pin is set
                    to under normal conditions when no alert is triggered
                    (1 for HIGH or 0 for LOW).
                gpioPinStateTriggered - The state that the gpio pin is set
                    to when an alert is triggered (1 for HIGH or 0 for LOW).
            -->
            <gpio
                gpioPin="24"
                gpioPinStateNormal="0"
                gpioPinStateTriggered="1">

                <!--
                    Settings how the GPIO pin should be set if a sensor alert with the state "triggered" was received.
                    activated - Should the GPIO pin be set if a sensor alert
                        with state "triggered" was recieved?
                        ("True" or "False")
                    state - The state the pin should be set to. This can either
                        be "normal" or "triggered".
                        (0 for "normal" or 1 for "triggered")
                        NOTE: This will be translated to HIGH and LOW via the
                        gpioPinStateNormal and gpioPinStateTriggered settings.
                -->
                <triggered
                    activated="True"
                    state="1" />

                <!--
                    Settings how the GPIO pin should be set if a sensor alert with the state "normal" was received.
                    activated - Should the GPIO pin be set if a sensor alert
                        with state "normal" was recieved?
                        ("True" or "False")
                    state - The state the pin should be set to. This can either
                        be "normal" or "triggered".
                        (0 for "normal" or 1 for "triggered")
                        NOTE: This will be translated to HIGH and LOW via the
                        gpioPinStateNormal and gpioPinStateTriggered settings.
                -->
                <normal
                    activated="True"
                    state="1" />

                <!--
                    Settings how the GPIO pin should be set if the system profile changes. This message is sent
                    to all Alert Clients as soon as the AlertR system profile changes. For example, if AlertR is used
                    in an alarm system context this could mean that the alarm system changed from the
                    system profile "activated" to the system profile "deactivated" and thus this message could be used
                    to turn something like a siren off.
                    activated - Should the GPIO pin be reset to the "normal"
                        state if an alert off message was received?
                        ("True" or "False")
                        NOTE: This will be translated to HIGH or LOW via the
                        gpioPinStateNormal setting.
                -->
                <profilechange
                    activated="True">

                    <!--
                        These are the target system profiles given as id for which the GPIO pin should be reset.
                        If the AlertR system changes the used system profile to one of these profiles,
                        the voltage of the GPIO pin will be changed.
                        (at least one profile has to be set but also multiple profiles are possible)
                    -->
                    <profile>0</profile>
                    <profile>1</profile>

                </profilechange>

                <!--
                    Reset of the GPIO pin after it was set to "triggered" state.
                    activated - Should the GPIO pin be reset after a given time
                        to "normal" after it was set to "triggered"?
                        ("True" or "False")
                        NOTE: This will be translated to HIGH or LOW via the
                        gpioPinStateNormal setting.
                    time - The time in seconds after the GPIO
                        pin was set to "triggered" it is reset to the "normal"
                        state. For example, if it is set to 30 then the
                        GPIO pin is set to "normal" 30 seconds after it was
                        set to "triggered" via a sensor alert.
                        Has to be larger than 0 if activated.
                -->
                <reset
                    activated="True"
                    time="30" />
            </gpio>

        </alert>

        <!--
            a single alert is configured in an "alert" element
            if you need additional alerts just add a new one
        -->
        <alert>

            <!--
                the general configuration of an alert
                id - local id of this alert (has to be unique on this client)
                description - description of this alert
            -->
            <general
                id="1"
                description="simple switch" />

            <!--
                the alert level of the current configured alert
                (an alert must have one but can have multiple alert levels)
            -->
            <alertLevel>2</alertLevel>

            <!--
                Raspberry Pi GPIO specific settings for the alert.
                gpioPin - Raspberry Pi GPIO pin that is used by this alert
                    NOTE: python uses the actual pin number and not
                    the GPIO number
                gpioPinStateNormal - The state that the gpio pin is set
                    to under normal conditions when no alert is triggered
                    (1 for HIGH or 0 for LOW).
                gpioPinStateTriggered - The state that the gpio pin is set
                    to when an alert is triggered (1 for HIGH or 0 for LOW).
            -->
            <gpio
                gpioPin="22"
                gpioPinStateNormal="0"
                gpioPinStateTriggered="1">

                <!--
                    Settings how the GPIO pin should be set if a sensor alert with the state "triggered" was received.
                    activated - Should the GPIO pin be set if a sensor alert
                        with state "triggered" was recieved?
                        ("True" or "False")
                    state - The state the pin should be set to. This can either
                        be "normal" or "triggered".
                        (0 for "normal" or 1 for "triggered")
                        NOTE: This will be translated to HIGH and LOW via the
                        gpioPinStateNormal and gpioPinStateTriggered settings.
                -->
                <triggered
                    activated="True"
                    state="1" />

                <!--
                    Settings how the GPIO pin should be set if a sensor alert with the state "normal" was received.
                    activated - Should the GPIO pin be set if a sensor alert
                        with state "normal" was recieved?
                        ("True" or "False")
                    state - The state the pin should be set to. This can either
                        be "normal" or "triggered".
                        (0 for "normal" or 1 for "triggered")
                        NOTE: This will be translated to HIGH and LOW via the
                        gpioPinStateNormal and gpioPinStateTriggered settings.
                -->
                <normal
                    activated="True"
                    state="0" />

                <!--
                    Settings how the GPIO pin should be reset if the system profile changes. This message is sent
                    to all Alert Clients as soon as the AlertR system profile changes. For example, if AlertR is used
                    in an alarm system context this could mean that the alarm system changed from the
                    system profile "activated" to the system profile "deactivated" and thus this message could be used
                    to turn something like a siren off.
                        state if an alert off message was received?
                        ("True" or "False")
                        NOTE: This will be translated to HIGH or LOW via the
                        gpioPinStateNormal setting.
                -->
                <profilechange
                    activated="False">

                    <!--
                        These are the target system profiles given as id for which the GPIO pin should be reset.
                        If the AlertR system changes the used system profile to one of these profiles,
                        the voltage of the GPIO pin will be changed.
                        (at least one profile has to be set but also multiple profiles are possible)
                    -->
                    <profile>0</profile>

                </profilechange>

                <!--
                    Reset of the GPIO pin after it was set to "triggered" state.
                    activated - Should the GPIO pin be reset after a given time
                        to "normal" after it was set to "triggered"?
                        ("True" or "False")
                        NOTE: This will be translated to HIGH or LOW via the
                        gpioPinStateNormal setting.
                    time - The time in seconds after the GPIO
                        pin was set to "triggered" it is reset to the "normal"
                        state. For example, if it is set to 30 then the
                        GPIO pin is set to "normal" 30 seconds after it was
                        set to "triggered" via a sensor alert.
                        Has to be larger than 0 if activated.
                -->
                <reset
                    activated="False"
                    time="0" />
            </gpio>

        </alert>

    </alerts>

</config>
