<?xml version="1.0"?>

<!--
    this is a template configuration file
    please rename this template to "config.xml" if you want to use it
    for the client
-->
<config version="1.001">

    <!--
        in this section general options are configured
    -->
    <general>

        <!--
            the settings for the logfile
            file - absolute path to the logfile
            level - valid log levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
        -->
        <log
            file="/absolute/path/to/logfile.log"
            level="INFO" />

        <!--
            the settings for the server
            host - location/address of the server
            port - port that is used by the server
        -->
        <server
            host="server.h4des.org"
            port="12345" />

        <!--
            The settings used for the TLS/SSL connection.
            enabled - Sets if TLS/SSL is used for connections.
                Only disable it for testing purposes and NEVER in a production environment. Has to be set to the same value on each AlertR instance.
        -->
        <ssl
            enabled="True">

            <!--
                The settings for server certificates. Only used if TLS/SSL is enabled.
                caFile - path to the CA file to check the correctness of the used TLS/SSL connection
            -->
            <server
                caFile="/absolute/path/to/server_CA.pem" />

            <!--
                The settings for a client certificate. Only used if TLS/SSL is enabled.
                certificateRequired - sets if it is required for the client
                    to authenticate itself via a certificate or not
                    (if you have the alert system reachable from the internet
                    you should use client certificates)
                    ("True" or "False")
                certFile - path to the certificate file of the client
                    this is used for the TLS/SSL connection
                    (only processed if "certificateRequired" is set to "True")
                keyFile - path to the key file of the client that is used
                    for the TLS/SSL connection
                    (only processed if "certificateRequired" is set to "True")
            -->
            <client
                certificateRequired="True"
                certFile="/absolute/path/to/client.crt"
                keyFile="/absolute/path/to/client.key" />
        </ssl>

        <!--
            user credentials of this client
            (WARNING: have to be unique for each client or strange
            behavior will happen)
            username - the username
            password - the password (thanks cpt obvious ...)
        -->
        <credentials
            username="user"
            password="pass" />

        <!--
            Connection settings.
            persistent - Flag that indicates if this client is considered
                to have a persistant connection to the server. This means
                that if this client disconnects from the server, the server
                will consider this as a fail state and will invoke an alarm.
                ("True" or "False")
        -->
        <connection
            persistent="True" />

    </general>


    <!--
        in this section options for email alerts are configured
    -->
    <smtp>

        <!--
            the general settings of the email notifications
            activated - are email alerts active? ("True" or "False")
            fromAddr - email address from which this email should be sent
            toAddr - email address to which the email should be sent
        -->
        <general
            activated="True"
            fromAddr="alertSystem@h4des.org"
            toAddr="youraddress@somehost.de" />

        <!--
            the server settings of the email notifications
            host - address of the used smtp server
                (only 127.0.0.1 supported at the moment)
            port - port of the used smtp server
        -->
        <server
            host="127.0.0.1"
            port="25" />

    </smtp>


    <!--
        in this section the options of the update process are configured
    -->
    <update>

        <!--
            the server settings of the update process (only change these
                settings if you want to use your own repository and not
                the AlertR master repository on github)
            url - URL to AlertR repository
                NOTE: the update process uses HTTPS and does not allow HTTP
        -->
        <server
            url="https://raw.githubusercontent.com/sqall01/alertR/master/" />

    </update>


    <!--
        section of all sensors that are monitored

        provider - Provider used to gather weather information
            (Only valid provider: "wunderground", "darksky")
        apiKey - API key for the provider. This key is needed
            in order to fetch weather data from the provider.
            Please visit the provider's website and request am API key.
        interval - Interval in seconds in which the data is fetched
            from the provider. Note that often provider only allow
            you a specific number of data updates during the day.
            Therefore, do not set up a too short interval.
    -->
    <sensors
        provider="darksky"
        apiKey="1111111111111111"
        interval="300" >

        <!--
            a single sensor is configured in a "sensor" element
            if you need additional sensors just add a new one
        -->
        <sensor>

            <!--
                the general configuration of a sensor
                id - local id of this sensor (has to be unique on this client)
                description - description of this sensor
                alertDelay - delay after which (when the alert system is still
                    active) the alert should trigger (this is processed
                    by the server and the value here is only used to register
                    with it at the server)
                triggerAlert - this flag indicates if this sensor should
                    trigger an alert for example it could be just used to
                    signal the state to the server and not trigger
                    any alert (regardless of if the alert system is
                    active or not)
                    ("True" or "False")
                triggerAlertNormal - this flag indicates if this sensor should
                    trigger an alert when it goes back to a normal state (and
                    not only if a triggered state is reached and the flag
                    "triggerAlert" is set). If this flag is not set, this
                    client sends only a state change to the server to inform
                    it about the new state.
                    ("True" or "False")
            -->
            <general
                id="0"
                description="Temperature Berlin"
                alertDelay="0"
                triggerAlert="True"
                triggerAlertNormal="True" />

            <!--
                the alert level that is triggered by the sensor
                (a sensor must have one but can have multiple alert levels)
            -->
            <alertLevel>0</alertLevel>

            <!--
                The settings specific for Wunderground.com.
                type - The type of data the sensor should hold.
                    Currently only valid options are:
                    temperature (shows the current temperature),
                    humidity (shows the current humidity),
                    forecasttemp (shows the temperature forecast),
                    forecastrain (shows the chance of rain forecast).
                sensorAlertForDataChange - Send Sensor Alert events instead of State Change events
                    when sensor data changes? Since AlertR is an event driven system, this can be useful
                    if you want to instrument the data the sensor is holding in instrumentation scripts.
                    For example if this sensor measures a temperature, if a window is open and
                    you want to react to a temperature value in a certain range, an instrumentation script
                    can do this on each Sensor Alert event that is sent to the server.
                    The state of the sensor is still determined by the threshold rules.
                    NOTE: triggerAlert and triggerAlertNormal have to be set to True if this option is used.
                country - The country the city resides in for
                    which you want to get weather data.
                city - The city for which you want to get weather
                    data.
                lon - Longitude for the city for which you want to
                    get weather data (some provider use GPS coordinates
                    internally). Please in signed degrees format (e.g.,
                    "52.520008")
                lat - Latitude for the city for which you want to
                    get weather data (some provider use GPS coordinates
                    internally).  Please in signed degrees format (e.g.,
                    "13.404954")
                hasThreshold - This flag indicates if the weather sensor
                    has a threshold which should not be reached. If it is
                    deactivated, then the sensor is only used to send
                    weather data to the server.
                    ("True" or "False")
                threshold - Float number which gives the threshold of the
                    sensor that should not be reached and therefore triggers
                    a sensor alert if it is reached and if it is back to
                    normal (if activated in the "general" section
                    of this sensor).
                ordering - The order that should be used to check the
                    threshold value.
                    Valid options are: LT, EQ, GT.
                    LT: lower than - triggers a sensor alert if the weather
                    data is lower than the threshold.
                    EQ: equal - triggers a sensor alert if the weather data
                    is equal to the threshold.
                    GT: greater than - triggers a sensor alert if the weather
                    data is greater than the threshold.
            -->
            <weather
                type="temperature"
                sensorAlertForDataChange="False"
                country="germany"
                city="berlin"
                lat="52.520008"
                lon="13.404954"
                hasThreshold="True"
                threshold="15.0"
                ordering="GT" />

        </sensor>

        <!--
            a single sensor is configured in a "sensor" element
            if you need additional sensors just add a new one
        -->
        <sensor>

            <!--
                the general configuration of a sensor
                id - local id of this sensor (has to be unique on this client)
                description - description of this sensor
                alertDelay - delay after which (when the alert system is still
                    active) the alert should trigger (this is processed
                    by the server and the value here is only used to register
                    with it at the server)
                triggerAlert - this flag indicates if this sensor should
                    trigger an alert for example it could be just used to
                    signal the state to the server and not trigger
                    any alert (regardless of if the alert system is
                    active or not)
                    ("True" or "False")
                triggerAlertNormal - this flag indicates if this sensor should
                    trigger an alert when it goes back to a normal state (and
                    not only if a triggered state is reached and the flag
                    "triggerAlert" is set). If this flag is not set, this
                    client sends only a state change to the server to inform
                    it about the new state.
                    ("True" or "False")
            -->
            <general
                id="1"
                description="Humidity Berlin"
                alertDelay="0"
                triggerAlert="True"
                triggerAlertNormal="True" />

            <!--
                the alert level that is triggered by the sensor
                (a sensor must have one but can have multiple alert levels)
            -->
            <alertLevel>0</alertLevel>

            <!--
                The settings specific for Wunderground.com.
                type - The type of data the sensor should hold.
                    Currently only valid options are:
                    temperature (shows the current temperature),
                    humidity (shows the current humidity),
                    forecasttemp (shows the temperature forecast),
                    forecastrain (shows the chance of rain forecast).
                sensorAlertForDataChange - Send Sensor Alert events instead of State Change events
                    when sensor data changes? Since AlertR is an event driven system, this can be useful
                    if you want to instrument the data the sensor is holding in instrumentation scripts.
                    For example if this sensor measures a temperature, if a window is open and
                    you want to react to a temperature value in a certain range, an instrumentation script
                    can do this on each Sensor Alert event that is sent to the server.
                    The state of the sensor is still determined by the threshold rules.
                    NOTE: triggerAlert and triggerAlertNormal have to be set to True if this option is used.
                country - The country the city resides in for
                    which you want to get weather data.
                city - The city for which you want to get weather
                    data.
                lon - Longitude for the city for which you want to
                    get weather data (some provider use GPS coordinates
                    internally). Please in signed degrees format (e.g.,
                    "52.520008")
                lat - Latitude for the city for which you want to
                    get weather data (some provider use GPS coordinates
                    internally).  Please in signed degrees format (e.g.,
                    "13.404954")
                hasThreshold - This flag indicates if the weather sensor
                    has a threshold which should not be reached. If it is
                    deactivated, then the sensor is only used to send
                    weather data to the server.
                    ("True" or "False")
                threshold - Integer number which gives the threshold of the
                    sensor that should not be reached and therefore triggers
                    a sensor alert if it is reached and if it is back to
                    normal (if activated in the "general" section
                    of this sensor).
                ordering - The order that should be used to check the
                    threshold value.
                    Valid options are: LT, EQ, GT.
                    LT: lower than - triggers a sensor alert if the weather
                    data is lower than the threshold.
                    EQ: equal - triggers a sensor alert if the weather data
                    is equal to the threshold.
                    GT: greater than - triggers a sensor alert if the weather
                    data is greater than the threshold.
            -->
            <weather
                type="humidity"
                sensorAlertForDataChange="False"
                country="germany"
                city="berlin"
                lat="52.520008"
                lon="13.404954"
                hasThreshold="True"
                threshold="50"
                ordering="LT" />

        </sensor>

        <!--
            a single sensor is configured in a "sensor" element
            if you need additional sensors just add a new one
        -->
        <sensor>

            <!--
                the general configuration of a sensor
                id - local id of this sensor (has to be unique on this client)
                description - description of this sensor
                alertDelay - delay after which (when the alert system is still
                    active) the alert should trigger (this is processed
                    by the server and the value here is only used to register
                    with it at the server)
                triggerAlert - this flag indicates if this sensor should
                    trigger an alert for example it could be just used to
                    signal the state to the server and not trigger
                    any alert (regardless of if the alert system is
                    active or not)
                    ("True" or "False")
                triggerAlertNormal - this flag indicates if this sensor should
                    trigger an alert when it goes back to a normal state (and
                    not only if a triggered state is reached and the flag
                    "triggerAlert" is set). If this flag is not set, this
                    client sends only a state change to the server to inform
                    it about the new state.
                    ("True" or "False")
            -->
            <general
                id="2"
                description="Forecast Rain Tomorrow Berlin"
                alertDelay="0"
                triggerAlert="False"
                triggerAlertNormal="False" />

            <!--
                the alert level that is triggered by the sensor
                (a sensor must have one but can have multiple alert levels)
            -->
            <alertLevel>0</alertLevel>

            <!--
                The settings specific for Wunderground.com.
                type - The type of data the sensor should hold.
                    Currently only valid options are:
                    temperature (shows the current temperature),
                    humidity (shows the current humidity),
                    forecasttemp (shows the temperature forecast),
                    forecastrain (shows the chance of rain forecast).
                sensorAlertForDataChange - Send Sensor Alert events instead of State Change events
                    when sensor data changes? Since AlertR is an event driven system, this can be useful
                    if you want to instrument the data the sensor is holding in instrumentation scripts.
                    For example if this sensor measures a temperature, if a window is open and
                    you want to react to a temperature value in a certain range, an instrumentation script
                    can do this on each Sensor Alert event that is sent to the server.
                    The state of the sensor is still determined by the threshold rules.
                    NOTE: triggerAlert and triggerAlertNormal have to be set to True if this option is used.
                country - The country the city resides in for
                    which you want to get weather data.
                city - The city for which you want to get weather
                    data.
                lon - Longitude for the city for which you want to
                    get weather data (some provider use GPS coordinates
                    internally). Please in signed degrees format (e.g.,
                    "52.520008")
                lat - Latitude for the city for which you want to
                    get weather data (some provider use GPS coordinates
                    internally).  Please in signed degrees format (e.g.,
                    "13.404954")
                hasThreshold - This flag indicates if the weather sensor
                    has a threshold which should not be reached. If it is
                    deactivated, then the sensor is only used to send
                    weather data to the server.
                    ("True" or "False")
                threshold - Integer number which gives the threshold of the
                    sensor that should not be reached and therefore triggers
                    a sensor alert if it is reached and if it is back to
                    normal (if activated in the "general" section
                    of this sensor).
                ordering - The order that should be used to check the
                    threshold value.
                    Valid options are: LT, EQ, GT.
                    LT: lower than - triggers a sensor alert if the weather
                    data is lower than the threshold.
                    EQ: equal - triggers a sensor alert if the weather data
                    is equal to the threshold.
                    GT: greater than - triggers a sensor alert if the weather
                    data is greater than the threshold.
                day - Sets the day for the forecast. Valid options are:
                    0 (today), 1 (tomorrow), 2 (day after tomorrow).
            -->
            <weather
                type="forecastrain"
                sensorAlertForDataChange="False"
                country="germany"
                city="berlin"
                lat="52.520008"
                lon="13.404954"
                day="1"
                hasThreshold="False"
                threshold="15"
                ordering="GT" />

        </sensor>

        <!--
            a single sensor is configured in a "sensor" element
            if you need additional sensors just add a new one
        -->
        <sensor>

            <!--
                the general configuration of a sensor
                id - local id of this sensor (has to be unique on this client)
                description - description of this sensor
                alertDelay - delay after which (when the alert system is still
                    active) the alert should trigger (this is processed
                    by the server and the value here is only used to register
                    with it at the server)
                triggerAlert - this flag indicates if this sensor should
                    trigger an alert for example it could be just used to
                    signal the state to the server and not trigger
                    any alert (regardless of if the alert system is
                    active or not)
                    ("True" or "False")
                triggerAlertNormal - this flag indicates if this sensor should
                    trigger an alert when it goes back to a normal state (and
                    not only if a triggered state is reached and the flag
                    "triggerAlert" is set). If this flag is not set, this
                    client sends only a state change to the server to inform
                    it about the new state.
                    ("True" or "False")
            -->
            <general
                id="3"
                description="Forecast Temperature Low Today Berlin"
                alertDelay="0"
                triggerAlert="False"
                triggerAlertNormal="False" />

            <!--
                the alert level that is triggered by the sensor
                (a sensor must have one but can have multiple alert levels)
            -->
            <alertLevel>0</alertLevel>

            <!--
                The settings specific for Wunderground.com.
                type - The type of data the sensor should hold.
                    Currently only valid options are:
                    temperature (shows the current temperature),
                    humidity (shows the current humidity),
                    forecasttemp (shows the temperature forecast),
                    forecastrain (shows the chance of rain forecast).
                sensorAlertForDataChange - Send Sensor Alert events instead of State Change events
                    when sensor data changes? Since AlertR is an event driven system, this can be useful
                    if you want to instrument the data the sensor is holding in instrumentation scripts.
                    For example if this sensor measures a temperature, if a window is open and
                    you want to react to a temperature value in a certain range, an instrumentation script
                    can do this on each Sensor Alert event that is sent to the server.
                    The state of the sensor is still determined by the threshold rules.
                    NOTE: triggerAlert and triggerAlertNormal have to be set to True if this option is used.
                country - The country the city resides in for
                    which you want to get weather data.
                city - The city for which you want to get weather
                    data.
                lon - Longitude for the city for which you want to
                    get weather data (some provider use GPS coordinates
                    internally). Please in signed degrees format (e.g.,
                    "52.520008")
                lat - Latitude for the city for which you want to
                    get weather data (some provider use GPS coordinates
                    internally).  Please in signed degrees format (e.g.,
                    "13.404954")
                hasThreshold - This flag indicates if the weather sensor
                    has a threshold which should not be reached. If it is
                    deactivated, then the sensor is only used to send
                    weather data to the server.
                    ("True" or "False")
                threshold - Float number which gives the threshold of the
                    sensor that should not be reached and therefore triggers
                    a sensor alert if it is reached and if it is back to
                    normal (if activated in the "general" section
                    of this sensor).
                ordering - The order that should be used to check the
                    threshold value.
                    Valid options are: LT, EQ, GT.
                    LT: lower than - triggers a sensor alert if the weather
                    data is lower than the threshold.
                    EQ: equal - triggers a sensor alert if the weather data
                    is equal to the threshold.
                    GT: greater than - triggers a sensor alert if the weather
                    data is greater than the threshold.
                day - Sets the day for the forecast. Valid options are:
                    0 (today), 1 (tomorrow), 2 (day after tomorrow).
                kind - Sets what kind of temperature forecast should be shown.
                    Possible options are:
                    high (shows highest temperature for the day),
                    low (shows lowest temperature for the day).
            -->
            <weather
                type="forecasttemp"
                sensorAlertForDataChange="False"
                country="germany"
                city="berlin"
                lat="52.520008"
                lon="13.404954"
                hasThreshold="False"
                threshold="15.0"
                ordering="GT"
                day="0"
                kind="low" />

        </sensor>

    </sensors>

</config>
