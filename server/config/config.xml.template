<?xml version="1.0"?>

<!--
    this is a template configuration file
    please rename this template to "config.xml" if you want to use it
    for the server
-->
<config version="1.000">

    <!--
        in this section general options are configured
    -->
    <general>

        <!--
            the settings for the logfile
            dir - absolute path to the directory for the logfiles
            level - valid log levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
        -->
        <log
            dir="/absolute/path/to/logfiles/"
            level="INFO" />

        <!--
            The settings for the server
            port - port that is used by the server
        -->
        <server
            port="12345" />

        <!--
            The settings used for the TLS/SSL connection. In order to be
            as secure as possible, only allow the highest version that is
            supported by your hosts. This means that the most secure setting
            is to set everything to "True". However, since TLSv1.3 is not
            widely adopted yet (OpenSSL version 1.1.1), you should
            also allow TLSv1.2.
            enabled - Sets if TLS/SSL is used for connections.
                Only disable it for testing purposes and NEVER in a production environment. Has to be set to the same value on each AlertR instance.
            noSSLv2 - Disables the use of SSLv2.
            noSSLv3 - Disables the use of SSLv3.
            noTLSv1_0 - Disables the use of TLSv1.0.
            noTLSv1_1 - Disables the use of TLSv1.1
                (Needs at least OpenSSL version 1.0.1).
            noTLSv1_2 - Disables the use of TLSv1.2
                (Needs at least OpenSSL version 1.0.1).
        -->
        <ssl
            enabled="True"
            noSSLv2="True"
            noSSLv3="True"
            noTLSv1_0="True"
            noTLSv1_1="True"
            noTLSv1_2="False">

            <!--
                The settings for server certificates. Only used if TLS/SSL is enabled.
                certFile - Path to the certificate file of the server that is used for the TLS/SSL connection.
                keyFile - Path to the key file of the server that is used for the TLS/SSL connection.
            -->
            <server
                certFile="/absolute/path/to/server.crt"
                keyFile="/absolute/path/to/server.key" />

            <!--
                The settings for a client certificate. Only used if TLS/SSL is enabled.
                useClientCertificates - sets if it is required for all clients to
                    authenticate themselves via a certificate or not (if you have
                    the alert system reachable from the internet you should use
                    client certificates)
                    ("True" or "False")
                clientCAFile - path to the CA file that is used to check the
                    client certificates
                    (only processed if "useClientCertificates" is set to "True")
            -->
            <client
                useClientCertificates="False"
                clientCAFile="/absolute/path/to/some_CA.pem" />
        </ssl>

        <!--
            settings for the alertR survey
            participate - Since alertR has an install and update script which
                uses Github as repository, no actual data about the usage of
                alertR exists. In order to get a better understanding of the
                used alertR instances and the versions that are used, alertR
                has a voluntary survey. If you participate, alertR will send
                once a week the version, revision, instances and configured
                update repository that is used by your installation to the
                survey server.
                ("True" or "False")
        -->
        <survey
            participate="True" />

    </general>


    <!--
        in this section the options of the update checking are configured
    -->
    <update>

        <!--
            the server settings of the update process (only change these
                settings if you want to use your own repository and not
                the AlertR master repository on github)
            url - URL to AlertR repository
                NOTE: the update process uses HTTPS and does not allow HTTP
        -->
        <server
            url="https://raw.githubusercontent.com/sqall01/alertR/master/" />

    </update>


    <!--
        In this section the system profiles are configured.
    -->
    <profiles>

        <!--
            A single system profile is configured in an "profile" element.
            If you need additional profiles just add a new one.
        -->
        <profile>

            <!--
                General settings of the system profile.
                id - id of the system profile
                    IMPORTANT: AlertR enforces that at least one profile exists and that the id 0 is used.
                name - name of the system profile. You can name it like you see fit, for example for what it is used.
                    In this example they are named for a alarm system context.
            -->
            <general
                id="0"
                name="Activated" />
        </profile>

        <!--
            A single system profile is configured in an "profile" element.
            If you need additional profiles just add a new one.
        -->
        <profile>

            <!--
                General settings of the system profile.
                id - id of the system profile
                    IMPORTANT: AlertR enforces that at least one profile exists and that the id 0 is used.
                name - name of the system profile. You can name it like you see fit, for example for what it is used.
                    In this example they are named for a alarm system context.
            -->
            <general
                id="1"
                name="Deactivated" />
        </profile>

        <!--
            A single system profile is configured in an "profile" element.
            If you need additional profiles just add a new one.
        -->
        <profile>

            <!--
                General settings of the system profile.
                id - id of the system profile
                    IMPORTANT: AlertR enforces that at least one profile exists and that the id 0 is used.
                name - name of the system profile. You can name it like you see fit, for example for what it is used.
                    In this example they are named for a alarm system context.
            -->
            <general
                id="2"
                name="Home Secured" />
        </profile>
    </profiles>


    <!--
        section of all alert levels that are configured
    -->
    <alertLevels>

        <!--
            a single alert level is configured in an "alertLevel" element
            if you need additional alert levels just add a new one
        -->
        <alertLevel>

            <!--
                general settings of the alert level
                level - level of this alert (has to be unique)
                name - name of the alert level
                    (for example for what it is used)
                triggerAlertTriggered - this flag indicates if this alert level
                    should issue a sensor alert message to all connected alert
                    clients when a sensor alert was received for a sensor
                    that reached the "triggered" state. If set to "False", each
                    received sensor alert message for a "triggered" state that
                    has this alert level will just be dropped. When set to
                    "True" the sensor alert message will be processed by
                    this alert level. This flag can be seen as a filter
                    for sensors that should send a sensor alert message
                    for "triggered" and "normal" state but not all alert level
                    of these sensors should handle "triggered" state sensor
                    alert messages.
                    ("True" or "False")
                triggerAlertNormal - this flag indicates if this alert level
                    should issue a sensor alert message to all connected alert
                    clients when a sensor alert was received for a sensor
                    that reached the "normal" state. If set to "False", each
                    received sensor alert message for a "normal" state that
                    has this alert level will just be dropped. When set to
                    "True" the sensor alert message will be processed by
                    this alert level. This flag can be seen as a filter
                    for sensors that should send a sensor alert message
                    for "triggered" and "normal" state but not all alert level
                    of these sensors should handle "normal" state sensor alert
                    messages.
                    ("True" or "False")
            -->
            <general
                level="0"
                name="display notification"
                triggerAlertTriggered="True"
                triggerAlertNormal="True" />

            <!--
                Setting if Sensor Alerts for this Alert Level are instrumented (meaning the given instrumentation
                script is executed with the contents of the Sensor Alert and the output of the instrumentation script
                is then used for further processing).
                activated - This flag indicates if this Alert Level is instrumented.
                    ("True" or "False")
                cmd - Path to the instrumentation script or executable.
                    NOTE: execute permission has to be set for the script or executable.
                timeout - timeout in seconds that the instrumentation script can take during the execution
                    NOTE: the server delays the processing of the received Sensor Alert until the instrumentation script
                    is either finished or the timeout is reached. Hence the introduced processing delay is at maximum
                    the set timeout.
            -->
            <instrumentation
                activated="False"
                cmd="/path/to/script.py"
                timeout="10" />

            <!--
                The system profile for which this Alert Level triggers.
                For example, if the Alert Level is set to trigger only when the system profile with id 0 is used,
                then Sensor Alerts using this Alert Level are only processed if the system uses profile with id 0.
                If you want that an Alert Level triggers always regardless of which system profile is used, then
                add all profiles here.
                (an Alert Level must have one set but can have multiple profiles configured).
            -->
            <profile>0</profile>
            <profile>1</profile>
            <profile>2</profile>

        </alertLevel>

        <!--
            a single alert level is configured in an "alertLevel" element
            if you need additional alert levels just add a new one
        -->
        <alertLevel>

            <!--
                general settings of the alert level
                level - level of this alert (has to be unique)
                name - name of the alert level
                    (for example for what it is used)
                triggerAlertTriggered - this flag indicates if this alert level
                    should issue a sensor alert message to all connected alert
                    clients when a sensor alert was received for a sensor
                    that reached the "triggered" state. If set to "False", each
                    received sensor alert message for a "triggered" state that
                    has this alert level will just be dropped. When set to
                    "True" the sensor alert message will be processed by
                    this alert level. This flag can be seen as a filter
                    for sensors that should send a sensor alert message
                    for "triggered" and "normal" state but not all alert level
                    of these sensors should handle "triggered" state sensor
                    alert messages.
                    ("True" or "False")
                triggerAlertNormal - this flag indicates if this alert level
                    should issue a sensor alert message to all connected alert
                    clients when a sensor alert was received for a sensor
                    that reached the "normal" state. If set to "False", each
                    received sensor alert message for a "normal" state that
                    has this alert level will just be dropped. When set to
                    "True" the sensor alert message will be processed by
                    this alert level. This flag can be seen as a filter
                    for sensors that should send a sensor alert message
                    for "triggered" and "normal" state but not all alert level
                    of these sensors should handle "normal" state sensor alert
                    messages.
                    ("True" or "False")
            -->
            <general
                level="1"
                name="alarm sirens"
                triggerAlertTriggered="True"
                triggerAlertNormal="False"  />

            <!--
                Setting if Sensor Alerts for this Alert Level are instrumented (meaning the given instrumentation
                script is executed with the contents of the Sensor Alert and the output of the instrumentation script
                is then used for further processing).
                activated - This flag indicates if this Alert Level is instrumented.
                    ("True" or "False")
                cmd - Path to the instrumentation script or executable.
                    NOTE: execute permission has to be set for the script or executable.
                timeout - timeout in seconds that the instrumentation script can take during the execution
                    NOTE: the server delays the processing of the received Sensor Alert until the instrumentation script
                    is either finished or the timeout is reached. Hence the introduced processing delay is at maximum
                    the set timeout.
            -->
            <instrumentation
                activated="False"
                cmd="/path/to/script.py"
                timeout="10" />

            <!--
                The system profile for which this Alert Level triggers.
                For example, if the Alert Level is set to trigger only when the system profile with id 0 is used,
                then Sensor Alerts using this Alert Level are only processed if the system uses profile with id 0.
                If you want that an Alert Level triggers always regardless of which system profile is used, then
                add all profiles here.
                (an Alert Level must have one set but can have multiple profiles configured).
            -->
            <profile>0</profile>
            <profile>2</profile>

        </alertLevel>

        <!--
            a single alert level is configured in an "alertLevel" element
            if you need additional alert levels just add a new one
        -->
        <alertLevel>

            <!--
                general settings of the alert level
                level - level of this alert (has to be unique)
                name - name of the alert level
                    (for example for what it is used)
                triggerAlertTriggered - this flag indicates if this alert level
                    should issue a sensor alert message to all connected alert
                    clients when a sensor alert was received for a sensor
                    that reached the "triggered" state. If set to "False", each
                    received sensor alert message for a "triggered" state that
                    has this alert level will just be dropped. When set to
                    "True" the sensor alert message will be processed by
                    this alert level. This flag can be seen as a filter
                    for sensors that should send a sensor alert message
                    for "triggered" and "normal" state but not all alert level
                    of these sensors should handle "triggered" state sensor
                    alert messages.
                    ("True" or "False")
                triggerAlertNormal - this flag indicates if this alert level
                    should issue a sensor alert message to all connected alert
                    clients when a sensor alert was received for a sensor
                    that reached the "normal" state. If set to "False", each
                    received sensor alert message for a "normal" state that
                    has this alert level will just be dropped. When set to
                    "True" the sensor alert message will be processed by
                    this alert level. This flag can be seen as a filter
                    for sensors that should send a sensor alert message
                    for "triggered" and "normal" state but not all alert level
                    of these sensors should handle "normal" state sensor alert
                    messages.
                    ("True" or "False")
            -->
            <general
                level="10"
                name="pausing xbmc"
                triggerAlertTriggered="True"
                triggerAlertNormal="False"  />

            <!--
                Setting if Sensor Alerts for this Alert Level are instrumented (meaning the given instrumentation
                script is executed with the contents of the Sensor Alert and the output of the instrumentation script
                is then used for further processing).
                activated - This flag indicates if this Alert Level is instrumented.
                    ("True" or "False")
                cmd - Path to the instrumentation script or executable.
                    NOTE: execute permission has to be set for the script or executable.
                timeout - timeout in seconds that the instrumentation script can take during the execution
                    NOTE: the server delays the processing of the received Sensor Alert until the instrumentation script
                    is either finished or the timeout is reached. Hence the introduced processing delay is at maximum
                    the set timeout.
            -->
            <instrumentation
                activated="False"
                cmd="/path/to/script.py"
                timeout="10" />

            <!--
                The system profile for which this Alert Level triggers.
                For example, if the Alert Level is set to trigger only when the system profile with id 0 is used,
                then Sensor Alerts using this Alert Level are only processed if the system uses profile with id 0.
                If you want that an Alert Level triggers always regardless of which system profile is used, then
                add all profiles here.
                (an Alert Level must have one set but can have multiple profiles configured).
            -->
            <profile>0</profile>
            <profile>1</profile>
            <profile>2</profile>

        </alertLevel>


        <!--
            a single alert level is configured in an "alertLevel" element
            if you need additional alert levels just add a new one
        -->
        <alertLevel>

            <!--
                general settings of the alert level
                level - level of this alert (has to be unique)
                name - name of the alert level
                    (for example for what it is used)
                triggerAlertTriggered - this flag indicates if this alert level
                    should issue a sensor alert message to all connected alert
                    clients when a sensor alert was received for a sensor
                    that reached the "triggered" state. If set to "False", each
                    received sensor alert message for a "triggered" state that
                    has this alert level will just be dropped. When set to
                    "True" the sensor alert message will be processed by
                    this alert level. This flag can be seen as a filter
                    for sensors that should send a sensor alert message
                    for "triggered" and "normal" state but not all alert level
                    of these sensors should handle "triggered" state sensor
                    alert messages.
                    ("True" or "False")
                triggerAlertNormal - this flag indicates if this alert level
                    should issue a sensor alert message to all connected alert
                    clients when a sensor alert was received for a sensor
                    that reached the "normal" state. If set to "False", each
                    received sensor alert message for a "normal" state that
                    has this alert level will just be dropped. When set to
                    "True" the sensor alert message will be processed by
                    this alert level. This flag can be seen as a filter
                    for sensors that should send a sensor alert message
                    for "triggered" and "normal" state but not all alert level
                    of these sensors should handle "normal" state sensor alert
                    messages.
                    ("True" or "False")
            -->
            <general
                level="20"
                name="motion detection"
                triggerAlertTriggered="True"
                triggerAlertNormal="False"  />

            <!--
                Setting if Sensor Alerts for this Alert Level are instrumented (meaning the given instrumentation
                script is executed with the contents of the Sensor Alert and the output of the instrumentation script
                is then used for further processing).
                activated - This flag indicates if this Alert Level is instrumented.
                    ("True" or "False")
                cmd - Path to the instrumentation script or executable.
                    NOTE: execute permission has to be set for the script or executable.
                timeout - timeout in seconds that the instrumentation script can take during the execution
                    NOTE: the server delays the processing of the received Sensor Alert until the instrumentation script
                    is either finished or the timeout is reached. Hence the introduced processing delay is at maximum
                    the set timeout.
            -->
            <instrumentation
                activated="False"
                cmd="/path/to/script.py"
                timeout="10" />

            <!--
                The system profile for which this Alert Level triggers.
                For example, if the Alert Level is set to trigger only when the system profile with id 0 is used,
                then Sensor Alerts using this Alert Level are only processed if the system uses profile with id 0.
                If you want that an Alert Level triggers always regardless of which system profile is used, then
                add all profiles here.
                (an Alert Level must have one set but can have multiple profiles configured).
            -->
            <profile>0</profile>

        </alertLevel>

    </alertLevels>

    <!--
        In this section options for the internal sensors are configured.
        Internal sensors are used by the server to react to fail states
        and to trigger sensorAlerts in the alertR system.
    -->
    <internalSensors>

        <!--
            The nodeTimeout sensor is an internal sensor that triggers when
            a node/client timed out. The server checks regularly if a node
            has timed out and will trigger a sensorAlert if one does
            (sensorAlert with state "triggered" when a node times out
            and a sensorAlert with state "normal" if the node reconnects).
            NOTE: This check is only performed on "persistent" nodes/clients.
            "Non-persistent" clients are allowed to disconnect from the system.
            activated - This flags indicates if the internal sensor is
                activated or not.
                ("True" or "False")
            description - Description of this sensor.
        -->
        <nodeTimeout
            activated="True"
            description="Internal: Node Timeout">

            <!--
                The alertLevel that is triggered by the sensor
                (a sensor must have one but can have multiple alert levels).
            -->
            <alertLevel>0</alertLevel>
            <alertLevel>1</alertLevel>

        </nodeTimeout>

        <!--
            The profileChange sensor is an internal sensor that triggers
            when the system profile changes.
            It allows you to utilize AlertR system profile changes.
            The currently used profile ID is stored as data in this sensor.
            activated - This flags indicates if the internal sensor is
                activated or not.
                ("True" or "False")
            description - Description of this sensor.
        -->
        <profileChange
            activated="True"
            description="Internal: Profile Change">

            <!--
                The alertLevel that is triggered by the sensor
                (a sensor must have one but can have multiple alert levels).
            -->
            <alertLevel>0</alertLevel>

        </profileChange>

        <!--
            The versionInformer sensor is an internal sensor that triggers
            when a new version is available in the update repository for
            any node connected to your alarm system.
            activated - This flags indicates if the internal sensor is activated or not.
                ("True" or "False")
            description - Description of this sensor.
            interval - The interval in seconds in which the server checks online for updates.
        -->
        <versionInformer
            activated="True"
            description="Internal: Version Informer"
            interval="86400">

            <!--
                The alertLevel that is triggered by the sensor
                (a sensor must have one but can have multiple alert levels).
            -->
            <alertLevel>0</alertLevel>

        </versionInformer>

        <!--
            The alertLevelInstrumentationError Sensor is an internal Sensor
            that triggers if an error occurs during the processing of an
            Alert Level instrumentation. It allows you to get notified if
            any of your instrumentation scripts do not work as intended.
            Obviously, this Sensor only works if you are using instrumentation
            for an Alert Level. Otherwise, it just lies dormant.
            activated - This flags indicates if the internal Sensor is
                activated or not.
                ("True" or "False")
            description - Description of this sensor.
        -->
        <alertLevelInstrumentationError
            activated="True"
            description="Internal: Alert Level Instrumentation Error">

            <!--
                The alertLevel that is triggered by the sensor
                (a sensor must have one but can have multiple alert levels).
            -->
            <alertLevel>0</alertLevel>
            <alertLevel>1</alertLevel>

        </alertLevelInstrumentationError>

        <!--
            The sensorErrorState Sensor is an internal Sensor
            that triggers if a sensor changes its error state.
            The error state of a sensor is changed if the sensor encounters an error
            during processing (e.g., a connection timeout while
            fetching data from the Internet, illegal data received from a FIFO file, ...).
            It allows you to get notified if a sensor in your system does not work as intended.
            activated - This flags indicates if the internal Sensor is
                activated or not.
                ("True" or "False")
            description - Description of this sensor.
        -->
        <sensorErrorState
            activated="True"
            description="Internal: Sensor Error State">

            <!--
                The alertLevel that is triggered by the sensor
                (a sensor must have one but can have multiple alert levels).
            -->
            <alertLevel>0</alertLevel>
            <alertLevel>1</alertLevel>

        </sensorErrorState>

    </internalSensors>

</config>
