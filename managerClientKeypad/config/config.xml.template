<?xml version="1.0"?>

<!--
    this is a template configuration file
    please rename this template to "config.xml" if you want to use it
    for the client
-->
<config version="1.000">

    <!--
        in this section general options are configured
    -->
    <general>

        <!--
            the settings for the logfile
            file - absolute path to the logfile
            level - valid log levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
        -->
        <log
            file="/absolute/path/to/logfile.log"
            level="INFO" />

        <!--
            the settings for the server
            host - location/address of the server
            port - port that is used by the server
        -->
        <server
            host="server.h4des.org"
            port="12345" />

        <!--
            The settings used for the TLS/SSL connection.
            enabled - Sets if TLS/SSL is used for connections.
                Only disable it for testing purposes and NEVER in a production environment. Has to be set to the same value on each AlertR instance.
        -->
        <ssl
            enabled="True">

            <!--
                The settings for server certificates. Only used if TLS/SSL is enabled.
                caFile - path to the CA file to check the correctness of the used TLS/SSL connection
            -->
            <server
                caFile="/absolute/path/to/server_CA.pem" />

            <!--
                The settings for a client certificate. Only used if TLS/SSL is enabled.
                certificateRequired - sets if it is required for the client
                    to authenticate itself via a certificate or not
                    (if you have the alert system reachable from the internet
                    you should use client certificates)
                    ("True" or "False")
                certFile - path to the certificate file of the client
                    this is used for the TLS/SSL connection
                    (only processed if "certificateRequired" is set to "True")
                keyFile - path to the key file of the client that is used
                    for the TLS/SSL connection
                    (only processed if "certificateRequired" is set to "True")
            -->
            <client
                certificateRequired="True"
                certFile="/absolute/path/to/client.crt"
                keyFile="/absolute/path/to/client.key" />
        </ssl>

        <!--
            user credentials of this client
            (WARNING: have to be unique for each client or strange
            behavior will happen)
            username - the username
            password - the password (thanks cpt obvious ...)
        -->
        <credentials
            username="user"
            password="pass" />

        <!--
            Connection settings.
            persistent - Flag that indicates if this client is considered
                to have a persistant connection to the server. This means
                that if this client disconnects from the server, the server
                will consider this as a fail state and will invoke an alarm.
                ("True" or "False")
        -->
        <connection
            persistent="True" />

    </general>


    <!--
        in this section options for email alerts are configured
    -->
    <smtp>

        <!--
            the general settings of the email notifications
            activated - are email alerts active? ("True" or "False")
            fromAddr - email address from which this email should be sent
            toAddr - email address to which the email should be sent
        -->
        <general
            activated="True"
            fromAddr="alertSystem@h4des.org"
            toAddr="youraddress@somehost.de" />

        <!--
            the server settings of the email notifications
            host - address of the used smtp server
                (only 127.0.0.1 supported at the moment)
            port - port of the used smtp server
        -->
        <server
            host="127.0.0.1"
            port="25" />

    </smtp>


    <!--
        in this section the options of the update process are configured
    -->
    <update>

        <!--
            the server settings of the update process (only change these
                settings if you want to use your own repository and not
                the AlertR master repository on github)
            url - URL to AlertR repository
                NOTE: the update process uses HTTPS and does not allow HTTP
        -->
        <server
            url="https://raw.githubusercontent.com/sqall01/alertR/master/" />

    </update>


    <!--
        section of manager specific settings
    -->
    <manager>

        <!--
            the general settings of the manager client
            description - description of the client
        -->
        <general
            description="test manager" />

        <!--
            Audio specific settings
            enabled - Should the client output audio? ("True" or "False")
            playSilence - Should the client play silence all the time
                in order to keep the sound channel open? This is a workaround
                if HDMI is used. The delay of some speakers will cut the
                beginning of the played sound otherwise. ("True" or "False")
        -->
        <audio
            enabled="True"
            playSilence="True" />

        <!--
            keypad specific settings
            timeDelayedChange - this value gives the delay in seconds of the delayed
                profile change option (if AlertR is used in an alarm system context, this can be used
                to change to the "alarm system active" profile after given seconds for example to leave
                the building before the alarm system is activated).
        -->
        <keypad
            timeDelayedChange="30">

            <!--
                a single pin that is configured to login to the manager
                if you need additional pins just add a new one
            -->
            <pin>1234</pin>
            <pin>2354</pin>

        </keypad>

        <!--
            sensor warning states settings

            Configure sensor states which result in a warning that the user has to confirm before the AlertR system
            changes the system profile. For example, if a window sensor indicates that the window is open then this
            manager client warns the user that the window is open before it changes the system profile.
        -->
        <sensorwarningstates>

            <!--
                A sensor state that is checked before changing the system profile. If the sensor is in the state
                as configured here, the client issues a warning which has to be confirmed before changing
                the system profile.
                (the number of sensors is variable, add or remove as many as you need).

                username - the username of the sensor client that handles this sensor
                clientSensorId - the sensor id of the sensor that is configured on the client side
                warningState - the state the sensor has to have in order to get a warning
                    ("True" or "False")
                    (True means "triggered" state; False means "normal" state)
            -->
            <sensor
                username="windowsensor"
                clientSensorId="0"
                warningState="True">

                <!--
                    The system profile for which the sensor state is checked before executing the system profile
                    change command. In this example the sensor state is checked if changing the system profile
                    to profile with ID 0 or ID 2.
                    (a sensor warning state must have one but can have multiple target profiles set)
                -->
                <profile>0</profile>
                <profile>2</profile>

            </sensor>

            <!--
                A sensor state that is checked before changing the system profile. If the sensor is in the state
                as configured here, the client issues a warning which has to be confirmed before changing
                the system profile.
                (the number of sensors is variable, add or remove as many as you need).

                username - the username of the sensor client that handles this sensor
                clientSensorId - the sensor id of the sensor that is configured on the client side
                warningState - the state the sensor has to have in order to get a warning
                    ("True" or "False")
                    (True means "triggered" state; False means "normal" state)
            -->
            <sensor
                username="windowsensor"
                clientSensorId="1"
                warningState="True">

                <!--
                    The system profile for which the sensor state is checked before executing the system profile
                    change command. In this example the sensor state is checked if changing the system profile
                    to profile with ID 0 or ID 2.
                    (a sensor warning state must have one but can have multiple target profiles set)
                -->
                <profile>0</profile>
                <profile>2</profile>

            </sensor>

        </sensorwarningstates>

    </manager>

</config>
